@page "/admin/verification"
@attribute [Authorize(Roles = "admin")]
@layout AdminAuthLayout
@inject NavigationManager NavManager
@inject IVerifyService VerifyService
@inject IUserService UserService 
@inject IToastService Toast

<section class="admin-body px-3 px-md-5 my-3">
    <div class="top-container d-flex align-items-center px-lg-5">
        <div class="left-box d-flex align-items-center me-auto">
            <img src="./css/images/verification.png" alt="User-logo" class="title-img">
            <h3 class="title-text">Verifications</h3>
        </div>
        <div class="right-box">
            <form action="" class="d-flex align-items-center">
                <input type="text" name="search-box" class="search-input mx-1">
                <button type="submit" class="submit-btn">
                    <img src="./css/images/search-btn.png" alt="Search" class="search-btn">
                </button>
            </form>
        </div>
    </div>
    <div class="lower-container">
        <div class="table-box">
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>Last Name</th>
                        <th>Vaccination Id</th>
                        <th>Valid Id</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var verify in Verifies)
                    {
                        <tr>
                            <td>@verify.FullName</td>
                            <td>@verify.VaccImgName</td>
                            <td>@verify.IdImgName</td>
                            <td>
                                <button type="button" class="trans-btn" @onclick="() => OnUpdate(verify.UserId)">Update</button>
                                <button type="button" class="trans-btn" @onclick="() => OnDelete(verify)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

@code {
    List<Verify> Verifies = new List<Verify>();

    protected async override Task OnInitializedAsync()
    {
        var result = await VerifyService.GetAllVerify();
        if(result != null)
        {
            Verifies = result;
            foreach (var verify in Verifies)
            {
                var user = await UserService.GetUser(verify.UserId);
                verify.FullName = $"{user.FirstName} {user.LastName}";
            }
        }
    }

    private void OnUpdate(int UserId)
    {
        NavManager.NavigateTo($"/admin/userform/add/{UserId}");
    }

    private async Task OnDelete(Verify verify)
    {
        var result = await VerifyService.DeleteVerify(verify);
        Toast.ShowError("Succesfully Deleted", "Deleted");
        Verifies = result;
    }
}
