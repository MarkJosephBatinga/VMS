@page "/admin/unvaccinated"
@attribute [Authorize(Roles = "admin")]
@layout AdminAuthLayout
@inject NavigationManager NavManager
@inject IUserService UserService
@inject IToastService Toast

<section class="admin-body px-3 px-md-5 my-3">
    <div class="top-container d-flex align-items-center px-lg-5">
        <div class="left-box d-flex align-items-center me-auto">
            <img src="./css/images/unvaccinated.png" alt="User-logo" class="title-img">
            <h3 class="title-text">Unvaccinated</h3>
        </div>
        <div class="right-box">
            <EditForm Model="token" OnValidSubmit="OnSearch">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <div class="d-flex align-items-center">
                    <ValidationMessage For="() => token.LastName" />
                    <input type="text" @bind-value="token.LastName" placeholder="Last Name" name="search-box" class="search-input mx-1">
                    <button type="submit" class="submit-btn">
                        <img src="./css/images/search-btn.png" alt="Search" class="search-btn">
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
    <div class="lower-container">
        <div class="table-box">
            <table class="styled-table">
                <thead>
                    <tr>
                        <th>Last Name</th>
                        <th>First Name</th>
                        <th>Email</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Users)
                    {
                        <tr>
                            <td>@user.LastName</td>
                            <td>@user.FirstName</td>
                            <td>@user.email</td>
                            <td>
                                <button type="button" class="trans-btn" @onclick="() => OnDelete(user)">Delete</button>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</section>

@code {      
    List<User> Users = new List<User>();
    SearchToken token = new SearchToken();

    protected async override Task OnInitializedAsync()
    {
        var result = await UserService.GetAllUnvaccinatedUser();
        if (result != null)
        {
            Users = result;
        }
    }


    private async Task OnDelete(User user)
    {
        var result = await UserService.DeleteUser(user);
        Toast.ShowError("Succesfully Deleted", "Deleted");
        Users = await UserService.GetAllUnvaccinatedUser();
    }

    private async Task OnSearch()
    {
        var dbUsers = await UserService.GetAllUnvaccinatedUser();
        if (dbUsers != null)
        {
            Users = dbUsers.Where(u => u.LastName == token.LastName).ToList();
        }
    }
}
